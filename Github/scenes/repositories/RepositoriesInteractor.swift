//
//  RepositoriesInteractor.swift
//  Github
//
//  Created by Rafael Almeida on 28/03/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RepositoriesBusinessLogic
{
    func getRespositories(request: Repositories.Initial.Request)
}

protocol RepositoriesDataStore
{
    var login: String? { get }
    var node: String? { get }
}

class RepositoriesInteractor: RepositoriesDataStore
{
    var login: String?
    var node: String?
    var presenter: RepositoriesPresentationLogic?
    var worker: RepositoriesWorker = RepositoriesWorker()
}

extension RepositoriesInteractor: RepositoriesBusinessLogic {
    func getRespositories(request: Repositories.Initial.Request){
        worker.getRepositories { [weak self] (repository, error) in
            if let repository = repository {
                self?.presenter?.presentRepositories(response: Repositories.Initial.Response(repositories: repository))
            } else {
                self?.presenter?.presentError(response: Repositories.Error.Response(error: error))
            }
        }
    }
}
