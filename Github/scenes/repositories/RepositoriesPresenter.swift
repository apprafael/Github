//
//  RepositoriesPresenter.swift
//  Github
//
//  Created by Rafael Almeida on 28/03/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RepositoriesPresentationLogic
{
    func presentRepositories(response: Repositories.Initial.Response)
    func presentError(response: Repositories.Error.Response)
}

class RepositoriesPresenter
{
  weak var viewController: RepositoriesDisplayLogic?

}

extension RepositoriesPresenter: RepositoriesPresentationLogic {
    func presentRepositories(response: Repositories.Initial.Response){
        
        var repositoriesViewModel = [RepositoryViewModel]()
        
        if let items = response.repositories.items {
            for repository in items {
                let repositoryViewModel:RepositoryViewModel = RepositoryViewModel(repositoryName: repository.name ?? "",
                                                                                  reposidotyDescription: repository.itemDescription ?? "",
                                                                                  ownerName: repository.owner?.login ?? "",
                                                                                  avatarUrl: repository.owner?.avatarURL ?? "",
                                                                                  stars: repository.stargazersCount ?? 0 ,
                                                                                  forks: repository.forksCount ?? 0)
                repositoriesViewModel.append(repositoryViewModel)
            }
        }
        
        viewController?.displayRepositories(viewModel: Repositories.Initial.ViewModel(repositories: repositoriesViewModel))
    }
    func presentError(response: Repositories.Error.Response){
        viewController?.displayError(viewModel: Repositories.Error.ViewModel(error: response.error))
    }
}
